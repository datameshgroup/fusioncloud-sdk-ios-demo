// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name FusionCloud
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Alamofire
import CommonCrypto
import Foundation
@_exported import FusionCloud
import IDZSwiftCommonCrypto
import ObjectMapper
import Starscream
import Swift
import _Concurrency
import _StringProcessing
public class SaleToPOILoginRequest : ObjectMapper.Mappable {
  public var saleToPOIRequest: FusionCloud.SaleToPOIRequest?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class TransactionStatusResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var response: FusionCloud.Response?
  public var messageReference: FusionCloud.MessageReference?
  public var repeatedMessageResponse: FusionCloud.RepeatedMessageResponse?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class RepeatedMessageResponse : ObjectMapper.Mappable {
  public var repeatedResponseMessageBody: FusionCloud.RepeatedResponseMessageBody?
  public var messageHeader: FusionCloud.MessageHeader?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class RepeatedResponseMessageBody : ObjectMapper.Mappable {
  public var paymentResponse: FusionCloud.PaymentResponse?
  public var reversalResponse: FusionCloud.ReversalResponse?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public protocol FusionClientDelegate : AnyObject {
  func socketConnected(client: FusionCloud.FusionClient)
  func socketDisconnected(client: FusionCloud.FusionClient)
  func socketReceived(client: FusionCloud.FusionClient, data: Swift.String)
  func socketError(client: FusionCloud.FusionClient, error: Swift.Error)
  func logData(client: FusionCloud.FusionClient, type: Swift.String, data: Swift.String)
  func loginResponseReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, loginResponse: FusionCloud.LoginResponse)
  func paymentResponseReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, paymentResponse: FusionCloud.PaymentResponse)
  func transactionStatusResponseReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, transactionStatusResponse: FusionCloud.TransactionStatusResponse)
  func displayRequestReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, displayRequest: FusionCloud.DisplayRequest)
  func eventNotificationReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, eventNotification: FusionCloud.EventNotification)
  func reconcilationResponseReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, reconcilationResponse: FusionCloud.ReconciliationResponse)
  func cardAcquisitionResponseReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, cardAcquisitionResponse: FusionCloud.CardAcquisitionResponse)
  func logoutResponseResponseReceived(client: FusionCloud.FusionClient, messageHeader: FusionCloud.MessageHeader, logoutResponse: FusionCloud.LogoutResponse)
  func credentialsError(client: FusionCloud.FusionClient, error: Swift.String)
}
@available(iOS 12.0, *)
public class FusionClient : Starscream.WebSocketDelegate {
  public func didReceive(event: Starscream.WebSocketEvent, client: Starscream.WebSocket)
  public var fusionCloudConfig: FusionCloud.FusionCloudConfig?
  public var socket: Starscream.WebSocket?
  public var messageHeader: FusionCloud.MessageHeader?
  public var securityTrailer: FusionCloud.SecurityTrailer?
  weak public var fusionClientDelegate: FusionCloud.FusionClientDelegate?
  public init()
  public init(fusionCloudConfig: FusionCloud.FusionCloudConfig)
  public func createDefaultHeader()
  public func createDefaultSecurityTrailer()
  public func sendMessage<T>(requestBody: T, type: Swift.String) where T : ObjectMapper.Mappable
  @objc deinit
}
public struct TestClass {
  public static func testThisFunction() -> Swift.String
}
public class LoginRequest : ObjectMapper.Mappable {
  public var dateTime: Foundation.Date?
  public var saleSoftware: FusionCloud.SaleSoftware?
  public var saleTerminalData: FusionCloud.SaleTerminalData?
  public var trainingModeFlag: Swift.Bool?
  public var operatorLanguage: Swift.String?
  public var operatorID: Swift.String?
  public var shiftNumber: Swift.String?
  public var pOISerialNumber: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SaleSoftware : ObjectMapper.Mappable {
  public var providerIdentification: Swift.String?
  public var applicationName: Swift.String?
  public var softwareVersion: Swift.String?
  public var certificationCode: Swift.String?
  public var componentType: Swift.String?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SaleTerminalData : ObjectMapper.Mappable {
  public var terminalEnvironment: FusionCloud.TerminalEnvironment?
  public var saleCapabilities: [FusionCloud.SaleCapability]?
  public var saleProfile: FusionCloud.SaleProfile?
  public var totalsGroupID: Swift.String?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SaleProfile : ObjectMapper.Mappable {
  public var genericProfile: Swift.String?
  public var serviceProfiles: [Swift.String]?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class ReversalResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var response: FusionCloud.Response?
  public var poiData: FusionCloud.POIData?
  public var paymentReceipt: [FusionCloud.PaymentReceipt]?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class CardAcquisitionRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var saleData: FusionCloud.SaleData?
  public var cardAcquisitionTransaction: FusionCloud.CardAcquisitionTransaction?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class CardAcquisitionTransaction : ObjectMapper.Mappable {
  public var allowedPaymentBrand: [Swift.String]?
  public var forceEntryMode: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoginResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var response: FusionCloud.Response?
  public var poiSystemData: FusionCloud.POISystemData?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class POISystemData : ObjectMapper.Mappable {
  public var dateTime: Swift.String?
  public var poiSoftware: FusionCloud.POISoftware?
  public var poiTerminalData: FusionCloud.POITerminalData?
  public var poiStatus: FusionCloud.POIStatus?
  public var tokenRequestStatus: Swift.Bool?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class POISoftware : ObjectMapper.Mappable {
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class POITerminalData : ObjectMapper.Mappable {
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class POIProfile : ObjectMapper.Mappable {
  public var genericProfile: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class POIStatus : ObjectMapper.Mappable {
  public var globalStatus: Swift.String?
  public var pedOkFlag: Swift.Bool?
  public var securityOkFlag: Swift.Bool?
  public var cardReaderOkFlag: Swift.Bool?
  public var printerStatus: Swift.String?
  public var communicationOKFlag: Swift.Bool?
  public var fraudPreventionFlag: Swift.Bool?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class EventNotification : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var timeStamp: Foundation.Date?
  public var eventToNotify: Swift.String?
  public var eventDetails: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class CustomField : ObjectMapper.Mappable {
  public var key: Swift.String?
  public var type: Swift.String?
  public var value: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class Crypto {
  public init()
  public func buildRequest<T>(kek: Swift.String, request: T, header: FusionCloud.MessageHeader, security: FusionCloud.SecurityTrailer, type: Swift.String) -> Swift.String where T : ObjectMapper.Mappable
  public func buildRequestBody<T>(request: T, header: FusionCloud.MessageHeader, requestType: Swift.String) -> Swift.String where T : ObjectMapper.Mappable
  public func buildSecurityTrailer(kek: Swift.String, request: Swift.String, security: FusionCloud.SecurityTrailer) -> Swift.String
  public func generateMAC(macBody: Swift.String, hexKey: Swift.String) -> Swift.String
  public func generate16ByteKey() -> [Swift.UInt8]
  public func randomString(length: Swift.Int) -> Swift.String
  public func generateEncryptedKey(randomKey: [Swift.UInt8], KEK: Swift.String) -> [Swift.UInt8]
  public func extractEncryptedKey(encryptedKey: [Swift.UInt8], kek: Swift.String) -> [Swift.UInt8]
  public func crypt(value: [Swift.UInt8], key: Swift.String) -> [Swift.UInt8]
  public func decrypt(value: [Swift.UInt8], key: Swift.String) -> [Swift.UInt8]
  public func append8Bytes(h: [Swift.UInt8]) -> [Swift.UInt8]
  public func getLast8Bytes(encrypt: [Swift.UInt8]) -> [Swift.UInt8]
  public func getSha256(s: Swift.String) -> [Swift.UInt8]
  public func validateSecurityTrailer(securityTrailer: FusionCloud.SecurityTrailer, kek: Swift.String, raw: Swift.String) throws
  public func getRawMacBody(jsonRaw: Swift.String) -> Swift.String
  @objc deinit
}
public enum MacValidation : Swift.Error {
  case runtimeError(Swift.String)
}
public class DisplayRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var displayOutput: FusionCloud.DisplayOutput?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func getCashierDisplayAsPlainText() -> Swift.String?
  @objc deinit
}
public class DisplayOutput : ObjectMapper.Mappable {
  public var responseRequiredFlag: Swift.Bool?
  public var device: Swift.String?
  public var infoQuality: Swift.String?
  public var outputContent: FusionCloud.OutputContent?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class OutputContent : ObjectMapper.Mappable {
  public var outputFormat: Swift.String?
  public var outputText: FusionCloud.OutputText?
  public var outputXHTML: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class OutputText : ObjectMapper.Mappable {
  public var text: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class SaleToPOIResponse : ObjectMapper.Mappable {
  public var messageheader: FusionCloud.MessageHeader?
  public var abortResponse: FusionCloud.AbortResponse?
  public var paymentResponse: FusionCloud.PaymentResponse?
  public var loginResponse: FusionCloud.LoginResponse?
  public var cardAcquisitionResponse: FusionCloud.CardAcquisitionResponse?
  public var displayResponse: FusionCloud.DisplayResponse?
  public var inputResponse: FusionCloud.InputResponse?
  public var logoutResponse: FusionCloud.LogoutResponse?
  public var printResponse: FusionCloud.PrintResponse?
  public var reconciliationResponse: FusionCloud.ReconciliationResponse?
  public var transactionStatusResponse: FusionCloud.TransactionStatusResponse?
  public var reversalResponse: FusionCloud.ReversalResponse?
  public var eventNotification: FusionCloud.EventNotification?
  public var securityTrailer: FusionCloud.SecurityTrailer?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class InputResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class OutputResult : ObjectMapper.Mappable {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class InputResult : ObjectMapper.Mappable {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class Input : ObjectMapper.Mappable {
  public var inputCommand: Swift.String?
  public var confirmedFlag: Swift.String?
  public var password: Swift.String?
  public var menuEntryNumber: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SaleToPOI : ObjectMapper.Mappable {
  public var saleToPOIResponse: FusionCloud.SaleToPOIResponse?
  public var saleToPOIRequest: FusionCloud.SaleToPOIRequest?
  required public init?()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class CardAcquisitionResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var response: FusionCloud.Response?
  public var saleData: FusionCloud.SaleData?
  public var poiData: FusionCloud.POIData?
  public var paymentInstrumentData: FusionCloud.PaymentInstrumentData?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class Rebates : ObjectMapper.Mappable {
  public var totalRebate: Foundation.NSDecimalNumber?
  public var rebateLabel: Swift.String?
  public var saleItemRebate: [FusionCloud.SaleItemRebate]?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SaleItemRebate : ObjectMapper.Mappable {
  public var itemID: Swift.Int64?
  public var productCode: Swift.String?
  public var eanUpc: Swift.String?
  public var unitOfMeasure: Swift.String?
  public var quantity: Foundation.NSDecimalNumber?
  public var itemAmount: Foundation.NSDecimalNumber?
  public var rebateLabel: Swift.String?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LogoutResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var response: FusionCloud.Response?
  public var poiSystemData: FusionCloud.POISystemData?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public func isCardValid(cardNumber: Swift.String, cardBrand: Swift.String) -> (isValid: Swift.Bool, errorMessage: Swift.String)
public enum CreditCardType : Swift.String {
  case visa
  case mastercard
  case americanexpress
  case dinersclub
  case jcb
  case unionpay, cupdebit
  case discover
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public class MessageHeader : ObjectMapper.Mappable {
  public var messageClass: FusionCloud.MessageClass?
  public var messageCategory: FusionCloud.MessageCategory?
  public var messageType: FusionCloud.MessageType?
  public var serviceID: Swift.String?
  public var deviceID: Swift.String?
  public var protocolVersion: Swift.String?
  public var saleID: Swift.String!
  public var poiID: Swift.String!
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentRequest : ObjectMapper.Mappable {
  public var saleData: FusionCloud.SaleData?
  public var paymentTransaction: FusionCloud.PaymentTransaction?
  public var paymentData: FusionCloud.PaymentData?
  public var customFields: [FusionCloud.CustomField]?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class SaleData : ObjectMapper.Mappable {
  public var operatorID: Swift.String?
  public var operatorLanguage: Swift.String?
  public var shiftNumber: Swift.String?
  public var customerLanguage: Swift.String?
  public var saleTransactionID: FusionCloud.SaleTransactionID?
  public var saleReferenceID: Swift.String?
  public var saleTerminalData: FusionCloud.SaleTerminalData?
  public var tokenRequestedType: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class SaleTransactionID : ObjectMapper.Mappable {
  public var transactionID: Swift.String?
  public var timeStamp: Foundation.Date?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  required public init(transactionID: Swift.String)
  @objc deinit
}
public class PaymentData : ObjectMapper.Mappable {
  public var paymentType: FusionCloud.PaymentType?
  public var paymentInstrumentData: FusionCloud.PaymentInstrumentData?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  required public init(paymentType: FusionCloud.PaymentType)
  @objc deinit
}
public class PaymentTransaction : ObjectMapper.Mappable {
  public var amountsReq: FusionCloud.AmountsReq?
  public var origionalPOITransaction: FusionCloud.OrigionalPOITransaction?
  public var saleItem: [FusionCloud.SaleItem]?
  public var transactionConditions: FusionCloud.TransactionConditions?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class TransactionConditions : ObjectMapper.Mappable {
  public var allowedPaymentBrands: [Swift.String]?
  public var acquirerID: [Swift.String]?
  public var debitPreferredFlag: Swift.Bool?
  public var forceOnlineFlag: Swift.Bool?
  public var merchantCategoryCode: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class OrigionalPOITransaction : ObjectMapper.Mappable {
  public var saleID: Swift.String?
  public var poiID: Swift.String?
  public var poiTransactionID: FusionCloud.POITransactionID?
  public var reuseCardDataFlag: Swift.Bool?
  public var approvalCode: Swift.String?
  public var lastTransactionFlag: Swift.Bool?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class AmountsReq : ObjectMapper.Mappable {
  public var currency: Swift.String?
  public var requestedAmount: Foundation.NSDecimalNumber?
  public var cashBackAmount: Foundation.NSDecimalNumber?
  public var tipAmount: Foundation.NSDecimalNumber?
  public var surchargeAmount: Foundation.NSDecimalNumber?
  public var paidAmount: Foundation.NSDecimalNumber?
  public var maximumCashBackAmount: Foundation.NSDecimalNumber?
  public var minimumSplitAmount: Foundation.NSDecimalNumber?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class SaleItem : ObjectMapper.Mappable {
  public var itemID: Swift.Int64?
  public var productCode: Swift.String?
  public var eanUpc: Swift.String?
  public var unitOfMeasure: Swift.String?
  public var quantity: Foundation.NSDecimalNumber?
  public var unitPrice: Foundation.NSDecimalNumber?
  public var itemAmount: Foundation.NSDecimalNumber?
  public var taxCode: Swift.String?
  public var saleChannel: Swift.String?
  public var productLabel: Swift.String?
  public var additionalProductInfo: Swift.String?
  public var parentItemID: Swift.Int64?
  public var costBase: Foundation.NSDecimalNumber?
  public var discount: Foundation.NSDecimalNumber?
  public var categories: [Swift.String]?
  public var brand: Swift.String?
  public var quantityInStock: Foundation.NSDecimalNumber?
  public var tags: [Swift.String]?
  public var restricted: Swift.Bool?
  public var pageURL: Swift.String?
  public var imageURLs: [Swift.String]?
  public var style: Swift.String?
  public var size: Swift.String?
  public var colour: Swift.String?
  public var weight: Foundation.NSDecimalNumber?
  public var weightUnitOfMeasure: Swift.String?
  public var customFields: [FusionCloud.CustomField]?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class ReconcillationRequest : ObjectMapper.Mappable, FusionCloud.Request {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public enum MessageCategory : Swift.String {
  case Abort, Admin, BalanceInquiry, CardAcquisition, Display, Event, Input, Login, Logout, Payment, Print, Reconciliation, Reversal, TransactionStatus, Other
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum TerminalEnvironment : Swift.String {
  case Attended, SemiAttended, Unattended, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum SaleCapability : Swift.String {
  case CashierStatus, CashierError, CashierInput, CustomerAssistance, PrinterReceipt, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum PaymentType : Swift.String {
  case Normal, Reversal, Refund, CashAdvance, FirstReservation, Completion
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum PaymentInstrumentType : Swift.String {
  case Card, Check, Cash, Mobile, Other, Unspecified
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum EntryMode : Swift.String {
  case File, Keyed, Manual, Scanned, MagStripe, ICC, SynchronousICC, Tapped, Mobile, RFID, Contactless, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum InfoQualify : Swift.String {
  case Status, Error, Display, Input, POIReplication, CustomerAssitance, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum InputCommand : Swift.String {
  case GetAnyKey, GetConfirmation, Password, GetMenuEntry, TextString, DigitString, DecimalString, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum ReversalReason : Swift.String {
  case CustCancel, MerchantCancel, Malfunction, Unable2Compl, SignatureDeclined, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum ErrorCondition : Swift.String {
  case Aborted, Busy, Cancel, DeviceOut, InsertedCard, InProgress, LoggedOut, MessageFormat, NotAllowed, NotFound, PaymentRestriction, Refusal, UnavailableDevice, UnavailableService, InvalidCard, UnreachableHost, WrongPIN, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum ResponseResult : Swift.String {
  case Success, Failure, Partial, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum CurrencySymbol : Swift.String {
  case AUD, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum POICapability : Swift.String {
  case MagStripe, ICC, EMVContactless
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum TransactionType : Swift.String {
  case Debit, Credit, CashAdvance, ReverseDebit, ReverseCredit, OneTimeReservation, CompletedDeferred, FirstReservation, UpdateReservation, CompletedReservation, Declined, Failed, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum MessageClass : Swift.String {
  case Service, Device, Event
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum MessageType : Swift.String {
  case Request, Response, Notification
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum LoyaltyBrand : Swift.String {
  case Unknown, Qantas, DRC, Other
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum LoyaltyUnit : Swift.String {
  case Point, Monetary, Uknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum IdentificationType : Swift.String {
  case PAN, ISOTrack2, BarCode, AccountNumber, PhoneNumber, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum IdentificationSupport : Swift.String {
  case NoCard, LoyaltyCard, HybridCard, LinkedCard, Unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public class AbortResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var timeStamp: Foundation.Date?
  public var eventToNotify: Swift.String?
  public var eventDetails: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var response: FusionCloud.PResponse?
  public var saleData: FusionCloud.PaymentResponseSaleData?
  public var poiData: FusionCloud.POIData?
  public var paymentResult: FusionCloud.PaymentResult?
  public var allowedProductCodes: [Swift.String]?
  public var paymentReceipt: [FusionCloud.PaymentReceipt]?
  public var loyaltyResult: [FusionCloud.LoyaltyResult]?
  required public init?(map: ObjectMapper.Map)
  public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PResponse : ObjectMapper.Mappable {
  public var result: FusionCloud.ResponseResult?
  public var errorCondition: FusionCloud.ErrorCondition?
  public var additionalResponse: Swift.String?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  public func isSuccess() -> Swift.Bool
  @objc deinit
}
public class POIData : ObjectMapper.Mappable {
  public var poiReconciliationID: Swift.String?
  public var poiTransactionID: FusionCloud.POITransactionID?
  public var allowedProductCodes: [Swift.String]?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class POITransactionID : ObjectMapper.Mappable {
  public var transactionID: Swift.String?
  public var timeStamp: Foundation.Date?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentResult : ObjectMapper.Mappable {
  public var paymentType: FusionCloud.PaymentType?
  public var onlineFlag: Swift.Bool?
  public var amountsResp: FusionCloud.AmountsResp?
  public var paymentInstrumentData: FusionCloud.PaymentInstrumentData?
  public var paymentAcquirerData: FusionCloud.PaymentAcquirerData?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class AmountsResp : ObjectMapper.Mappable {
  public var currency: Swift.String?
  public var authorizedAmount: Foundation.NSDecimalNumber?
  public var totalFeesAmount: Foundation.NSDecimalNumber?
  public var cashBackAmount: Foundation.NSDecimalNumber?
  public var tipAmount: Foundation.NSDecimalNumber?
  public var surchargeAmount: Foundation.NSDecimalNumber?
  public var partialAuthorizedAmount: Foundation.NSDecimalNumber?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentAcquirerData : ObjectMapper.Mappable {
  public var acquirerID: Swift.String?
  public var merchantID: Swift.String?
  public var acquirerPOIID: Swift.String?
  public var approvalCode: Swift.String?
  public var responseCode: Swift.String?
  public var hostReconcilationID: Swift.String?
  public var acquirerTransactionID: FusionCloud.AcquirerTransactionID?
  public var rrn: Swift.String?
  public var stan: Swift.String?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class AcquirerTransactionID : ObjectMapper.Mappable {
  public var transactionID: Swift.String?
  public var timeStamp: Foundation.Date?
  public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentInstrumentData : ObjectMapper.Mappable {
  public var paymentInstrumentType: FusionCloud.PaymentInstrumentType?
  public var cardData: FusionCloud.CardData?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentToken : ObjectMapper.Mappable {
  public var tokenRequestType: Swift.String?
  public var tokenValue: Swift.String?
  public var expiryDateTime: Swift.String?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class CardData : ObjectMapper.Mappable {
  public var entryMode: FusionCloud.EntryMode?
  public var paymentBrand: Swift.String?
  public var maskedPan: Swift.String?
  public var account: Swift.String?
  public var paymentToken: FusionCloud.PaymentToken?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  public func getAccount() -> Swift.String
  public func getPaymentBrand() -> Swift.String
  @objc deinit
}
public class PaymentReceipt : ObjectMapper.Mappable {
  public var documentQualifier: Swift.String?
  public var integratedPrintFlag: Swift.Bool?
  public var requiredSignatureFlag: Swift.Bool?
  public var outputContent: FusionCloud.OutputContent?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  public func getReceiptAsPlainText() -> Swift.String?
  @objc deinit
}
public class PrintRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var printOutput: FusionCloud.PrintOuput?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PrintOuput : ObjectMapper.Mappable {
  public var documentQualifier: Swift.String?
  public var integratedPrintFlag: Swift.Bool?
  public var requiredSignatureFlag: Swift.Bool?
  public var outputContent: FusionCloud.OutputContent?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class Response : ObjectMapper.Mappable {
  public var result: FusionCloud.ResponseResult?
  public var errorCondition: FusionCloud.ErrorCondition?
  public var additionalResponse: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  public func isSuccess() -> Swift.Bool
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class PrintResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var documentQuaifier: Swift.String?
  public var response: FusionCloud.Response?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public protocol Request {
}
public protocol ResponseType {
}
public class TransactionStatusRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var messageReference: FusionCloud.MessageReference?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class MessageReference : ObjectMapper.Mappable {
  public var messageCategory: FusionCloud.MessageCategory?
  public var serviceID: Swift.String?
  public var saleID: Swift.String?
  public var poiID: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class InputRequest : ObjectMapper.Mappable, FusionCloud.Request {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class InputData : ObjectMapper.Mappable {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class Menu : ObjectMapper.Mappable {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class DisplayResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  public var outputResultList: [FusionCloud.OutputResult]?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class ReconciliationResponse : ObjectMapper.Mappable, FusionCloud.ResponseType {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class TransactionTotal : ObjectMapper.Mappable {
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class PaymentTotal : ObjectMapper.Mappable {
  public var transactionType: FusionCloud.TransactionType?
  public var transactionCount: Swift.Int64?
  public var transactionAmount: Foundation.NSDecimalNumber?
  public var tipAmount: Foundation.NSDecimalNumber?
  public var surchargeAmount: Foundation.NSDecimalNumber?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoyaltyResult : ObjectMapper.Mappable {
  public var loyaltyAccount: FusionCloud.LoyaltyAccount?
  public var currentBalance: Foundation.NSDecimalNumber?
  public var loyaltyAmount: FusionCloud.LoyaltyAmount?
  public var loyaltyAcquirerData: FusionCloud.LoyaltyAcquirerData?
  public var rebates: FusionCloud.Rebates?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoyaltyAccount : ObjectMapper.Mappable {
  public var loyaltyAccountID: FusionCloud.LoyaltyAccountID?
  public var loyaltyBrand: FusionCloud.LoyaltyBrand?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoyaltyAccountID : ObjectMapper.Mappable {
  public var entryMode: FusionCloud.EntryMode?
  public var identificationType: FusionCloud.IdentificationType?
  public var identificationSupport: FusionCloud.IdentificationSupport?
  public var loyaltyID: Swift.String?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoyaltyAmount : ObjectMapper.Mappable {
  public var loyaltyUnit: FusionCloud.LoyaltyUnit?
  public var currency: FusionCloud.CurrencySymbol?
  public var amountValue: Foundation.NSDecimalNumber?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoyaltyAcquirerData : ObjectMapper.Mappable {
  public var loyaltyAcquirerID: Swift.String?
  public var approvalCode: Swift.String?
  public var loyaltyTransactionID: FusionCloud.LoyaltyTransactionID?
  public var hostReconciliationID: Swift.String?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LoyaltyTransactionID : ObjectMapper.Mappable {
  public var transactionID: Swift.String?
  public var timeStamp: Foundation.Date?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class FusionCloudConfig {
  public var serverDomain: Swift.String?
  public var kekValue: Swift.String?
  public var keyIdentifier: Swift.String?
  public var keyVersion: Swift.String?
  public var providerIdentification: Swift.String?
  public var applicationName: Swift.String?
  public var softwareVersion: Swift.String?
  public var certificationCode: Swift.String?
  public var saleID: Swift.String!
  public var poiID: Swift.String!
  public var testEnvironment: Swift.Bool
  public var allowSelfSigned: Swift.Bool?
  required public init(testEnvironmentui: Swift.Bool?)
  @objc deinit
}
public class AbortRequest : ObjectMapper.Mappable {
  public var messageReference: FusionCloud.MessageReference?
  public var abortReason: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class ReversalRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var reversalReason: FusionCloud.ReversalReason?
  public var originalPOITransaction: FusionCloud.OrigionalPOITransaction?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class LogoutRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var maintenanceAllowed: Swift.Bool?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SecurityTrailer : ObjectMapper.Mappable {
  public var contentType: Swift.String?
  public var authenticationData: FusionCloud.AuthenticationData?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class AuthenticationData : ObjectMapper.Mappable {
  public var version: Swift.String?
  public var recipient: FusionCloud.Recipient?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class Recipient : ObjectMapper.Mappable {
  public var mac: Swift.String?
  public var kek: FusionCloud.KEK?
  public var macAlgorithm: FusionCloud.MACAlgorithm?
  public var encapContent: FusionCloud.EncapsulatedContent?
  required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class KEK : ObjectMapper.Mappable {
  public var version: Swift.String?
  public var encryptedKey: Swift.String?
  public var kekIdentifier: FusionCloud.KEKIdentifier?
  public var kekAlgorithm: FusionCloud.KeyEncryptionAlgorithm?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class KEKIdentifier : ObjectMapper.Mappable {
  public var keyIdentifier: Swift.String?
  public var keyVersion: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class KeyEncryptionAlgorithm : ObjectMapper.Mappable {
  public var algorithm: Swift.String?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class MACAlgorithm : ObjectMapper.Mappable {
  public var algorithm: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class EncapsulatedContent : ObjectMapper.Mappable {
  public var contentType: Swift.String?
  public func mapping(map: ObjectMapper.Map)
  required public init?(map: ObjectMapper.Map)
  required public init()
  @objc deinit
}
public class PaymentResponseSaleData : ObjectMapper.Mappable {
  public var saleTransactionID: FusionCloud.SaleTransactionID?
  public var saleReferenceID: Swift.String?
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public class SaleToPOIRequest : ObjectMapper.Mappable, FusionCloud.Request {
  public var messageHeader: FusionCloud.MessageHeader?
  public var abortRequest: FusionCloud.AbortRequest?
  public var paymentRequest: FusionCloud.PaymentRequest?
  public var loginRequest: FusionCloud.LoginRequest?
  public var cardAcquisitionRequest: FusionCloud.CardAcquisitionRequest?
  public var displayRequest: FusionCloud.DisplayRequest?
  public var inputRequest: FusionCloud.InputRequest?
  public var logoutRequest: FusionCloud.LogoutRequest?
  public var printRequest: FusionCloud.PrintRequest?
  public var reconcilliationRequest: FusionCloud.ReconcillationRequest?
  public var transactionStatusRequest: FusionCloud.TransactionStatusRequest?
  public var reversalRequest: FusionCloud.ReversalRequest?
  public var securityTrailer: FusionCloud.SecurityTrailer?
  public var eventNotification: FusionCloud.EventNotification?
  required public init?(map: ObjectMapper.Map)
  required public init()
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
extension FusionCloud.CreditCardType : Swift.Equatable {}
extension FusionCloud.CreditCardType : Swift.Hashable {}
extension FusionCloud.CreditCardType : Swift.RawRepresentable {}
extension FusionCloud.MessageCategory : Swift.Equatable {}
extension FusionCloud.MessageCategory : Swift.Hashable {}
extension FusionCloud.MessageCategory : Swift.RawRepresentable {}
extension FusionCloud.TerminalEnvironment : Swift.Equatable {}
extension FusionCloud.TerminalEnvironment : Swift.Hashable {}
extension FusionCloud.TerminalEnvironment : Swift.RawRepresentable {}
extension FusionCloud.SaleCapability : Swift.Equatable {}
extension FusionCloud.SaleCapability : Swift.Hashable {}
extension FusionCloud.SaleCapability : Swift.RawRepresentable {}
extension FusionCloud.PaymentType : Swift.Equatable {}
extension FusionCloud.PaymentType : Swift.Hashable {}
extension FusionCloud.PaymentType : Swift.RawRepresentable {}
extension FusionCloud.PaymentInstrumentType : Swift.Equatable {}
extension FusionCloud.PaymentInstrumentType : Swift.Hashable {}
extension FusionCloud.PaymentInstrumentType : Swift.RawRepresentable {}
extension FusionCloud.EntryMode : Swift.Equatable {}
extension FusionCloud.EntryMode : Swift.Hashable {}
extension FusionCloud.EntryMode : Swift.RawRepresentable {}
extension FusionCloud.InfoQualify : Swift.Equatable {}
extension FusionCloud.InfoQualify : Swift.Hashable {}
extension FusionCloud.InfoQualify : Swift.RawRepresentable {}
extension FusionCloud.InputCommand : Swift.Equatable {}
extension FusionCloud.InputCommand : Swift.Hashable {}
extension FusionCloud.InputCommand : Swift.RawRepresentable {}
extension FusionCloud.ReversalReason : Swift.Equatable {}
extension FusionCloud.ReversalReason : Swift.Hashable {}
extension FusionCloud.ReversalReason : Swift.RawRepresentable {}
extension FusionCloud.ErrorCondition : Swift.Equatable {}
extension FusionCloud.ErrorCondition : Swift.Hashable {}
extension FusionCloud.ErrorCondition : Swift.RawRepresentable {}
extension FusionCloud.ResponseResult : Swift.Equatable {}
extension FusionCloud.ResponseResult : Swift.Hashable {}
extension FusionCloud.ResponseResult : Swift.RawRepresentable {}
extension FusionCloud.CurrencySymbol : Swift.Equatable {}
extension FusionCloud.CurrencySymbol : Swift.Hashable {}
extension FusionCloud.CurrencySymbol : Swift.RawRepresentable {}
extension FusionCloud.POICapability : Swift.Equatable {}
extension FusionCloud.POICapability : Swift.Hashable {}
extension FusionCloud.POICapability : Swift.RawRepresentable {}
extension FusionCloud.TransactionType : Swift.Equatable {}
extension FusionCloud.TransactionType : Swift.Hashable {}
extension FusionCloud.TransactionType : Swift.RawRepresentable {}
extension FusionCloud.MessageClass : Swift.Equatable {}
extension FusionCloud.MessageClass : Swift.Hashable {}
extension FusionCloud.MessageClass : Swift.RawRepresentable {}
extension FusionCloud.MessageType : Swift.Equatable {}
extension FusionCloud.MessageType : Swift.Hashable {}
extension FusionCloud.MessageType : Swift.RawRepresentable {}
extension FusionCloud.LoyaltyBrand : Swift.Equatable {}
extension FusionCloud.LoyaltyBrand : Swift.Hashable {}
extension FusionCloud.LoyaltyBrand : Swift.RawRepresentable {}
extension FusionCloud.LoyaltyUnit : Swift.Equatable {}
extension FusionCloud.LoyaltyUnit : Swift.Hashable {}
extension FusionCloud.LoyaltyUnit : Swift.RawRepresentable {}
extension FusionCloud.IdentificationType : Swift.Equatable {}
extension FusionCloud.IdentificationType : Swift.Hashable {}
extension FusionCloud.IdentificationType : Swift.RawRepresentable {}
extension FusionCloud.IdentificationSupport : Swift.Equatable {}
extension FusionCloud.IdentificationSupport : Swift.Hashable {}
extension FusionCloud.IdentificationSupport : Swift.RawRepresentable {}
